# OceanProxy Nginx Configuration

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_stream_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP configuration for API and health checks
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Logging format for proxy requests
    log_format proxy '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'rt=$request_time uct="$upstream_connect_time" '
                     'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=proxy:10m rate=100r/s;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Default server (HTTP)
    server {
        listen 80 default_server;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API proxy to OceanProxy application
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://oceanproxy:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            access_log /var/log/nginx/api.log proxy;
        }

        # Legacy endpoints
        location ~ ^/(plan|nettify)/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://oceanproxy:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            access_log /var/log/nginx/legacy.log proxy;
        }

        # Documentation
        location /docs {
            proxy_pass http://oceanproxy:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redirect other HTTP requests to HTTPS (if SSL is configured)
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server (optional - uncomment when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name oceanproxy.io *.oceanproxy.io;
    # 
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    # 
    #     location / {
    #         proxy_pass http://oceanproxy:8080;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}

# Stream configuration for proxy load balancing
stream {
    # Logging
    log_format proxy_stream '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time';
    
    # Rate limiting for proxy connections
    limit_conn_zone $binary_remote_addr zone=proxy_conn:10m;
    
    # Include region-specific configurations
    include /etc/nginx/conf.d/*.conf;
    
    # USA region proxy (port 1337)
    upstream oceanproxy_usa {
        least_conn;
        # Servers will be added dynamically by the application
        # Examples:
        # server 127.0.0.1:10001;  # USA Residential instance 1
        # server 127.0.0.1:10002;  # USA Residential instance 2
        # server 127.0.0.1:12001;  # USA Datacenter instance 1
    }
    
    server {
        listen 1337;
        proxy_pass oceanproxy_usa;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
        
        # Connection limiting
        limit_conn proxy_conn 100;
        
        # Logging
        access_log /var/log/nginx/usa_proxy.log proxy_stream;
        error_log /var/log/nginx/usa_proxy_error.log;
    }
    
    # EU region proxy (port 1338)
    upstream oceanproxy_eu {
        least_conn;
        # Servers will be added dynamically by the application
        # Examples:
        # server 127.0.0.1:16001;  # EU Residential instance 1
        # server 127.0.0.1:18001;  # EU Datacenter instance 1
    }
    
    server {
        listen 1338;
        proxy_pass oceanproxy_eu;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
        
        # Connection limiting
        limit_conn proxy_conn 100;
        
        # Logging
        access_log /var/log/nginx/eu_proxy.log proxy_stream;
        error_log /var/log/nginx/eu_proxy_error.log;
    }
    
    # Alpha region proxy (port 9876)
    upstream oceanproxy_alpha {
        least_conn;
        # Servers will be added dynamically by the application
        # Examples:
        # server 127.0.0.1:22001;  # Alpha Residential instance 1
        # server 127.0.0.1:24001;  # Alpha Datacenter instance 1
    }
    
    server {
        listen 9876;
        proxy_pass oceanproxy_alpha;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
        
        # Connection limiting
        limit_conn proxy_conn 100;
        
        # Logging
        access_log /var/log/nginx/alpha_proxy.log proxy_stream;
        error_log /var/log/nginx/alpha_proxy_error.log;
    }
}